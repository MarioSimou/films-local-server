AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Environment:
    Type: String
    Default: stage
    AllowedValues:
      - stage
      - prod

Globals:
  Function:
    Runtime: go1.x
    MemorySize: 128 
    Timeout: 20
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: CRUD Rest API connected with the lambda functions
      StageName: !Ref Environment
      OpenApiVersion: 3.0.3
      
  FilmsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: films
      PrimaryKey:
          Name: GUID
          Type: String

  PostFilm:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to create a new film entry
      CodeUri: functions/postFilm
      Handler: main
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: POST
            Path: /api/v1/films
            RestApiId:
                Ref: RestApi
  GetFilms:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to get the films
      CodeUri: functions/getFilms
      Handler: main
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films
            Method: GET
            RestApiId:
              Ref: RestApi
  GetFilm:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to get a single film
      CodeUri: functions/getFilm
      Handler: main
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films/{guid}
            Method: GET
            RestApiId:
              Ref: RestApi
  DeleteFilm:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to delete a film
      Handler: main
      CodeUri: functions/deleteFilm
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films/{guid}
            Method: DELETE
            RestApiId:
              Ref: RestApi
  PutFilm:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to update a movie
      Handler: main
      CodeUri: functions/putFilm
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films/{guid}
            Method: PUT
            RestApiId:
              Ref: RestApi
  UploadFilm:
    Type: AWS::Serverless::Function
    Properties:
      Description: Upload a movie to an s3 bucket
      Handler: main
      CodeUri: functions/uploadFilm
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films/{guid}/upload
            Method: PUT
            RestApiId:
              Ref: RestApi
  PutFilmSubtitle:
    Type: AWS::Serverless::Function
    Properties:
      Description: Upload a subtitle for a particular film
      Handler: main
      CodeUri: functions/putFilmSubtitle
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films/{guid}/subtitle
            Method: PUT
            RestApiId:
              Ref: RestApi
  DeleteFilmSubtitle:
    Type: AWS::Serverless::Function
    Properties:
      Description: Delete the subtitle of a particular film
      Handler: main
      CodeUri: functions/deleteFilmSubtitle
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/films/{guid}/subtitle
            Method: DELETE
            RestApiId:
              Ref: RestApi

Outputs:
  FilmsTableId:
    Description: films table id
    Value: !Ref FilmsTable
  APIEndpointId:
    Description: endpoint id
    Value: !Ref RestApi
  APIEndpointStage:
    Description: stage endpoint for stage
    Value: !Sub 'https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod'