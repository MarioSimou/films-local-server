AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Environment:
    Type: String
    Default: stage
    AllowedValues:
      - stage
      - prod

Globals:
  Function:
    Runtime: go1.x
    MemorySize: 128 
    Timeout: 20
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
  Api:
    BinaryMediaTypes: ['*~1*']

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: CRUD Rest API connected with the lambda functions
      StageName: !Ref Environment
      OpenApiVersion: 3.0.3
      
  SongsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: songs
      PrimaryKey:
          Name: GUID
          Type: String

  PostSong:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to create a new song entry
      CodeUri: functions/postSong
      Handler: main
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: POST
            Path: /api/v1/songs
            RestApiId:
                Ref: RestApi
  GetSongs:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to get the songs
      CodeUri: functions/getSongs
      Handler: main
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/songs
            Method: GET
            RestApiId:
              Ref: RestApi
  GetSong:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to get a single song
      CodeUri: functions/getSong
      Handler: main
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/songs/{guid}
            Method: GET
            RestApiId:
              Ref: RestApi
  DeleteSong:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to delete a song
      Handler: main
      CodeUri: functions/deleteSong
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/songs/{guid}
            Method: DELETE
            RestApiId:
              Ref: RestApi
  PutSong:
    Type: AWS::Serverless::Function
    Properties:
      Description: Used to update a song
      Handler: main
      CodeUri: functions/putSong
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/songs/{guid}
            Method: PUT
            RestApiId:
              Ref: RestApi
  UploadSong:
    Type: AWS::Serverless::Function
    Properties:
      Description: Upload a song to an s3 bucket
      Handler: main
      CodeUri: functions/uploadSong
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /api/v1/songs/{guid}/upload
            Method: PUT
            RestApiId:
              Ref: RestApi
  PutSongImage:
        Type: AWS::Serverless::Function
        Properties:
          Description: Upload an image of a particular song
          Handler: main
          CodeUri: functions/putSongImage
          Events:
            ApiEvent:
              Type: Api
              Properties:
                Path: /api/v1/songs/{guid}/image
                Method: PUT
                RestApiId:
                  Ref: RestApi
  DeleteSongImage:
      Type: AWS::Serverless::Function
      Properties:
        Description: Delete an image of a particular song
        Handler: main
        CodeUri: functions/deleteSongImage
        Events:
          ApiEvent:
            Type: Api
            Properties:
              Path: /api/v1/songs/{guid}/image
              Method: DELETE
              RestApiId:
                Ref: RestApi

Outputs:
  SongsTableId:
    Description: Songs table id
    Value: !Ref SongsTable
  APIEndpointId:
    Description: endpoint id
    Value: !Ref RestApi
  APIEndpointStage:
    Description: stage endpoint for stage
    Value: !Sub 'https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod'