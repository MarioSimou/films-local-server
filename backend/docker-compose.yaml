version: '3.9'

volumes:
  aws-data:
networks:
  backend-network:
    name: songs-local-server-backend-network 

services:
  watcher:
    container_name: watcher
    build:
      context: .
      dockerfile: ./images/watcher.dockerfile
    volumes:
      - type: bind
        source: .
        target: /watcher
    networks:
      - backend-network
    depends_on: 
      - aws
  aws:
    container_name: aws
    image: localstack/localstack-full:0.13.2
    ports:
      - "3001:3001"
    environment:
      - LOCALSTACK_SERVICES=dynamodb,s3,sns
      - DATA_DIR=/tmp/localstack/data
      - DYNAMODB_SHARE_DB=1
      - EDGE_PORT=3001
      - DEBUG=0
    volumes:
      - type: volume
        source: aws-data
        target: /tmp/localstack/data
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    networks:
      - backend-network     

  dynamodb-admin:
    container_name: dynamodb-admin
    image: aaronshaf/dynamodb-admin:latest
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DYNAMO_ENDPOINT=http://aws:3001
    networks:
      - backend-network
    depends_on:
      - aws
      
  # api:
  #   container_name: api
  #   image: cnadiminti/aws-sam-local:latest
  #   volumes:
  #     - type: bind
  #       source: .
  #       target: /var/opt
  #     - type: bind
  #       source: /var/run/docker.sock
  #       target: /var/run/docker.sock
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - backend-network
  #   command: local start-api --parameter-values Environment=dev AWSS3Endpoint='http://s3:4566' AWSDynamoDBEndpoint='http://dynamodb:4566'