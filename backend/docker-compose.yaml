version: '3.9'

volumes:
  dynamodb-data: 
  s3-data:
networks:
  backend-network:
    name: songs-local-server-backend-network 

services:
  watcher:
    container_name: watcher
    build:
      context: .
      dockerfile: ./images/watcher.dockerfile
    volumes:
      - type: bind
        source: .
        target: /watcher
    networks:
      - backend-network
    depends_on: 
      - dynamodb
  dynamodb-admin:
    container_name: dynamodb-admin
    image: aaronshaf/dynamodb-admin:latest
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DYNAMO_ENDPOINT=http://dynamodb:4566
    networks:
      - backend-network
    depends_on:
      - dynamodb
  dynamodb:
    container_name: dynamodb
    image: localstack/localstack-full:0.13.2
    ports:
      - "3001:4566"
    environment:
      - LOCALSTACK_SERVICES=dynamodb
      - DATA_DIR=/tmp/localstack/data
      - DYNAMODB_SHARE_DB=1
      - EDGE_PORT=4566
      - DEBUG=0
    volumes:
      - type: volume
        source: dynamodb-data
        target: /tmp/localstack/data
    networks:
      - backend-network    
  s3:
    container_name: s3
    image: localstack/localstack-full:0.13.2
    ports:
      - "3003:4566"
    environment:
      - LOCALSTACK_SERVICES=s3
      - DATA_DIR=/tmp/localstack/data
      - EDGE_PORT=4566
      - DEBUG=0
    volumes:
      - type: volume
        source: s3-data
        target: /tmp/localstack/data
    networks:
      - backend-network    

      # api:
  #   container_name: api
  #   build:
  #     context: .
  #     dockerfile: ./images/api.dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - type: bind 
  #       source: .
  #       target: /api